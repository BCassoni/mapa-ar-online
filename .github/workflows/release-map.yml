name: Release Map File

on:
  push:
    branches:
      - main
    paths:
      - 'maps/ar-office.tmj'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT

      - name: Get commit count today
        id: commit_count
        run: |
          TODAY=$(date +'%Y-%m-%d')
          COUNT=$(git log --since="$TODAY 00:00:00" --until="$TODAY 23:59:59" --oneline -- maps/ar-office.tmj | wc -l)
          echo "count=$COUNT" >> $GITHUB_OUTPUT

      - name: Generate version
        id: version
        run: |
          VERSION="${{ steps.date.outputs.date }}"
          if [ "${{ steps.commit_count.outputs.count }}" -gt "1" ]; then
            VERSION="${VERSION}.${{ steps.commit_count.outputs.count }}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "üì¶ Version: $VERSION"

      - name: Check if release exists
        id: check_release
        run: |
          if gh release view "v${{ steps.version.outputs.version }}" > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Create Release
        if: steps.check_release.outputs.exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Map Release v${{ steps.version.outputs.version }}
          body: |
            ## üó∫Ô∏è AR Office Map Release
            
            **Version:** ${{ steps.version.outputs.version }}
            **Date:** ${{ steps.date.outputs.date }}
            
            ### üì• Download
            
            Use esta URL para consumir o mapa diretamente:
            ```
            https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}/ar-office.tmj
            ```
            
            Ou use a vers√£o latest (sempre a mais recente):
            ```
            https://github.com/${{ github.repository }}/releases/latest/download/ar-office.tmj
            ```
            
            ### ‚ÑπÔ∏è Informa√ß√µes
            - Sem rate-limit da API do GitHub
            - Servido via CDN do GitHub
            - Arquivo versionado e rastre√°vel
            
            ---
            
            _Release criada automaticamente via GitHub Actions_
          files: |
            maps/ar-office.tmj
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Success message
        if: steps.check_release.outputs.exists == 'false'
        run: |
          echo "‚úÖ Release criada com sucesso!"
          echo "üì¶ Vers√£o: v${{ steps.version.outputs.version }}"
          echo "üîó URL: https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}/ar-office.tmj"

      - name: Skip message
        if: steps.check_release.outputs.exists == 'true'
        run: |
          echo "‚ÑπÔ∏è Release v${{ steps.version.outputs.version }} j√° existe. Pulando cria√ß√£o."

